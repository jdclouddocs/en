swagger: "2.0"
info:
  version: "v1"
  title: Advanced Anti-DDoS Instance APIs
  description: "Advanced Anti-DDoS Instance APIs, instance level interface in forwarding configuration, etc."

basePath: /regions/{regionId}

paths:
  /instances:
    post:
      description: "Create Instance"
      operationId: createInstance
      parameters:
        - name: instanceSpec
          in: body
          description: "Create instance request parameters"
          required: true
          schema:
            $ref: "../model/InstanceSpec.yaml#/definitions/InstanceSpec"
      responses:
        200:
          description: OK
          schema:
            properties:
              result:
                properties:
                  orderId:
                    type: string
              requestId:
                type: string
    get:
      description: "Search the instance list"
      operationId: describeInstances
      parameters:
        - name: pageNumber
          in: query
          type: integer
          required: false
          description: "Page Number: 1 by default"
        - name: pageSize
          in: query
          type: integer
          required: false
          description: "Paging Size: 20 by default; value range [10, 100]"
        - name: name
          in: query
          type: string
          required: false
          description: "Instance Name, Fuzzy Matching Available"
      responses:
        200:
          description: OK
          schema:
            properties:
              result:
                properties:
                  dataList:
                    type: array
                    items:
                      $ref: "../model/Instance.yaml#/definitions/Instance"
                  totalCount:
                    type: integer
              requestId:
                type: string

  /instances/{instanceId}:
    get:
      description: "Search instances"
      operationId: describeInstance
      responses:
        200:
          description: OK
          schema:
            properties:
              result:
                properties:
                  data:
                    $ref: "../model/Instance.yaml#/definitions/Instance"
              requestId:
                type: string
        404:
          description: NOT_FOUND

  /instances/{instanceId}:setCC:
    post:
      description: "Set the instance CC defense"
      operationId: modifyInstanceCC
      parameters:
        - name: cCSpec
          in: body
          description: "cc Parameter"
          required: true
          schema:
            $ref: "../model/CcSpec.yaml#/definitions/CCSpec"
      responses:
        200:
          description: OK
          schema:
            properties:
              requestId:
                type: string
        404:
          description: NOT_FOUND

  /instances/{instanceId}:enableCC:
    post:
      description: "Enable the instance CC defense"
      operationId: enableInstanceCC
      responses:
        200:
          description: OK
          schema:
            properties:
              requestId:
                type: string
        404:
          description: NOT_FOUND

  /instances/{instanceId}:disableCC:
    post:
      description: "Disable the instance CC defense"
      operationId: disableInstanceCC
      responses:
        200:
          description: OK
          schema:
            properties:
              requestId:
                type: string
        404:
          description: NOT_FOUND

  /instances/{instanceId}:setUrlWhiteList:
    post:
      description: "Set the instance url white list"
      operationId: modifyInstanceUrlWhiteList
      parameters:
        - name: urlWhiteList
          in: body
          description: "Web Service Rule Parameter"
          required: true
          schema:
            type: array
            items:
              type: string
      responses:
        200:
          description: OK
          schema:
            properties:
              requestId:
                type: string
        404:
          description: NOT_FOUND

  /instances/{instanceId}:enableUrlWhiteList:
    post:
      description: "Enable the instance url white list"
      operationId: enableInstanceUrlWhiteList
      responses:
        200:
          description: OK
          schema:
            properties:
              requestId:
                type: string
        404:
          description: NOT_FOUND

  /instances/{instanceId}:disableUrlWhiteList:
    post:
      description: "Disable the instance url white list"
      operationId: disableInstanceUrlWhiteList
      responses:
        200:
          description: OK
          schema:
            properties:
              requestId:
                type: string
        404:
          description: NOT_FOUND

  /instances/{instanceId}:rename:
    post:
      description: "Modify the instance name"
      operationId: modifyInstanceName
      parameters:
        - name: name
          in: query
          description: "New Instance Name"
          required: true
          type: string
      responses:
        200:
          description: OK
          schema:
            properties:
              requestId:
                type: string
        404:
          description: NOT_FOUND

  /instances/{instanceId}:setIpBlackList:
    post:
      description: "Set the instance IP blacklist"
      operationId: modifyInstanceIpBlackList
      parameters:
        - name: ipBlackList
          in: body
          description: "IP Blacklist"
          required: true
          schema:
            type: array
            items:
              type: string
      responses:
        200:
          description: OK
          schema:
            properties:
              requestId:
                type: string
        404:
          description: NOT_FOUND
  /instances/{instanceId}:enableIpBlackList:
    post:
      description: "Enable the instance IP blacklist"
      operationId: enableInstanceIpBlackList
      responses:
        200:
          description: OK
          schema:
            properties:
              requestId:
                type: string
        404:
          description: NOT_FOUND
  /instances/{instanceId}:disableIpBlackList:
    post:
      description: "Disable the instance IP blacklist"
      operationId: disableInstanceIpBlackList
      responses:
        200:
          description: OK
          schema:
            properties:
              requestId:
                type: string
        404:
          description: NOT_FOUND
  /instances/{instanceId}:setIpWhiteList:
    post:
      description: "Set the instance IP white list"
      operationId: modifyInstanceIpWhiteList
      parameters:
        - name: ipWhiteList
          in: body
          description: "IP White List"
          required: true
          schema:
            type: array
            items:
              type: string
      responses:
        200:
          description: OK
          schema:
            properties:
              requestId:
                type: string
        404:
          description: NOT_FOUND
  /instances/{instanceId}:enableIpWhiteList:
    post:
      description: "Enable the instance IP white list"
      operationId: enableInstanceIpWhiteList
      responses:
        200:
          description: OK
          schema:
            properties:
              requestId:
                type: string
        404:
          description: NOT_FOUND
  /instances/{instanceId}:disableIpWhiteList:
    post:
      description: "Disable the instance IP white list"
      operationId: disableInstanceIpWhiteList
      responses:
        200:
          description: OK
          schema:
            properties:
              requestId:
                type: string
        404:
          description: NOT_FOUND

  /instances/{instanceId}:enableCcObserverMode:
    post:
      description: "Enable the observer mode of instance CC defense"
      operationId: enableCcObserverMode
      responses:
        200:
          description: OK
          schema:
            properties:
              requestId:
                type: string
        404:
          description: NOT_FOUND

  /instances/{instanceId}:disableCcObserverMode:
    post:
      description: "Disable the observer mode of instance CC defense"
      operationId: disableCcObserverMode
      responses:
        200:
          description: OK
          schema:
            properties:
              requestId:
                type: string
        404:
          description: NOT_FOUND

  /instances/{instanceId}:enableCcIpLimit:
    post:
      description: "Enable the speed limit of each IP of CC defense"
      operationId: enableCcIpLimit
      responses:
        200:
          description: OK
          schema:
            properties:
              requestId:
                type: string
        404:
          description: NOT_FOUND

  /instances/{instanceId}:disableCcIpLimit:
    post:
      description: "Disable the speed limit of each IP of CC defense"
      operationId: disableCcIpLimit
      responses:
        200:
          description: OK
          schema:
            properties:
              requestId:
                type: string
        404:
          description: NOT_FOUND

  /instances/{instanceId}:setCcIpLimit:
    post:
      description: "Set the speed limit of each Ip of instance CC defense"
      operationId: setCcIpLimit
      parameters:
        - name: cCSpec
          in: body
          description: "cc Parameter"
          required: true
          schema:
            $ref: "../model/CcIpLimitSpec.yaml#/definitions/CcIpLimitSpec"
      responses:
        200:
          description: OK
          schema:
            properties:
              requestId:
                type: string
        404:
          description: NOT_FOUND

  /instances/{instanceId}:modifyEPB:
    post:
      description: "Update the Instance Elastic Protection Bandwidth"
      operationId: modifyEPB
      parameters:
        - name: ePBSpec
          in: body
          description: "Update the Request Parameter of Elastic Protection Bandwidth"
          required: true
          schema:
            $ref: "../model/EPBSpec.yaml#/definitions/EPBSpec"
      responses:
        200:
          description: OK
          schema:
            properties:
              requestId:
                type: string
        404:
          description: NOT_FOUND

  /instances/{instanceId}:describeAlarmConfig:
    get:
      description: "Query Alarm Configuration"
      operationId: describeAlarmConfig
      responses:
        200:
          description: OK
          schema:
            properties:
              result:
                properties:
                  data:
                    $ref: "../model/AlarmConfig.yaml#/definitions/AlarmConfig"
              requestId:
                type: string
        404:
          description: NOT_FOUND

  /instances/{instanceId}:modifyAlarmConfig:
    post:
      description: "Update Alarm Configuration"
      operationId: modifyAlarmConfig
      parameters:
        - name: alarmConfigSpec
          in: body
          description: "Update the Request Parameter of Alarm Configuration"
          required: true
          schema:
            $ref: "../model/AlarmConfigSpec.yaml#/definitions/AlarmConfigSpec"
      responses:
        200:
          description: OK
          schema:
            properties:
              requestId:
                type: string

  /instance/describeNameList:
    get:
      description: "Query the List of Advanced Anti-DDoS Instance Names"
      operationId: describeNameList
      parameters:
        - name: id
          in: query
          type: string
          required: false
          description: "Advanced Anti-DDoS Instance ID; If Blank, Query All the Instance Names"
        - name: name
          in: query
          type: string
          required: false
          description: "Instance Name, Fuzzy Matching Available"
        - name: pageNumber
          in: query
          type: integer
          required: false
          description: "Page Number: 1 by default"
        - name: pageSize
          in: query
          type: integer
          required: false
          description: "Paging Size, 10 by Default; Value Range [0, 100]"
      responses:
        200:
          description: OK
          schema:
            properties:
              result:
                properties:
                  dataList:
                    type: array
                    items:
                      $ref: "../model/InstanceIdName.yaml#/definitions/InstanceIdName"
                  currentCount:
                    type: integer
                    description: "Current Page Counts"
                  totalCount:
                    type: integer
                    description: "Total Number of Instances"
                  totalPage:
                    type: integer
                    description: "Total Number of Pages"
              requestId:
                type: string

  /instance/describeProtectionStatistics:
    get:
      description: "Query the Statistic Information of Advanced Anti-DDoS Instance Protection"
      operationId: describeProtectionStatistics
      responses:
        200:
          description: OK
          schema:
            properties:
              result:
                properties:
                  data:
                    $ref: "../model/ProtectionStatistics.yaml#/definitions/ProtectionStatistics"
              requestId:
                type: string
        404:
          description: "NOT_FOUND"
        500:
          description: INTERNAL_SERVER_ERROR

  /instance/checkName:
    get:
      description: "Detect Whether the Instance Name is Legal"
      operationId: checkName
      parameters:
        - name: name
          in: query
          type: string
          required: true
          description: "Instance Name to be Detected"
      responses:
        200:
          description: OK
          schema:
            properties:
              result:
                properties:
                  data:
                    type: boolean
                    description: "Detection Result, True Means Legal, False Means Illegal"
              requestId:
                type: string

  /instance/describeVpcIpList:
    get:
      description: "Query the JD Cloud IP Resources of Users"
      operationId: describeVpcIpList
      parameters:
        - name: pageNumber
          in: query
          type: integer
          required: false
          description: "Page Number: 1 by default"
        - name: pageSize
          in: query
          type: integer
          required: false
          description: "Paging Size, 10 by Default; Value Range [0, 100], 0 Means Full"
      responses:
        200:
          description: OK
          schema:
            properties:
              result:
                properties:
                  dataList:
                    type: array
                    items:
                      $ref: "../model/VpcIpResource.yaml#/definitions/VpcIpResource"
                  currentCount:
                    type: integer
                    description: "Current Page Counts"
                  totalCount:
                    type: integer
                    description: "Total Number of Instances"
                  totalPage:
                    type: integer
                    description: "Total Number of Pages"
              requestId:
                type: string

  /instance/describeCCDefaultThresholds:
    get:
      description: "Query the CC Customized Default Threshold"
      operationId: describeCCDefaultThresholds
      responses:
        200:
          description: OK
          schema:
            properties:
              result:
                properties:
                  data:
                    $ref: "../model/CCDefaultThresholds.yaml#/definitions/CCDefaultThresholds"
              requestId:
                type: string


# Path General Parameters
parameters:
  regionId:
    name: regionId
    in: path
    required: true
    type: string
    description: "Region ID"
  instanceId:
    name: instanceId
    in: path
    required: true
    type: string
    description: "Instance ID"
